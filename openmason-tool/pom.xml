<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.stonebreak</groupId>
        <artifactId>stonebreak-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>openmason-tool</artifactId>
    <packaging>jar</packaging>

    <name>OpenMason Tool</name>
    <description>Tool for texture and model generation utilities for Stonebreak</description>
    
    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- LWJGL core -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>

        <!-- LWJGL OpenGL -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>

        <!-- LWJGL GLFW for window management -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-glfw</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-glfw</artifactId>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>

        <!-- Dear ImGui for immediate mode UI -->
        <dependency>
            <groupId>io.github.spair</groupId>
            <artifactId>imgui-java-binding</artifactId>
            <version>1.86.11</version>
        </dependency>
        <dependency>
            <groupId>io.github.spair</groupId>
            <artifactId>imgui-java-lwjgl3</artifactId>
            <version>1.86.11</version>
        </dependency>
        <dependency>
            <groupId>io.github.spair</groupId>
            <artifactId>imgui-java-natives-windows</artifactId>
            <version>1.86.11</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.github.spair</groupId>
            <artifactId>imgui-java-natives-linux</artifactId>
            <version>1.86.11</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.github.spair</groupId>
            <artifactId>imgui-java-natives-macos</artifactId>
            <version>1.86.11</version>
            <scope>runtime</scope>
        </dependency>

        <!-- LWJGL STB for image loading -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-stb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-stb</artifactId>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>

        <!-- LWJGL NFD for native file dialogs -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-nfd</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-nfd</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>

        <!-- Java OpenGL Math Library -->
        <dependency>
            <groupId>org.joml</groupId>
            <artifactId>joml</artifactId>
        </dependency>

        <!-- SVG Processing for Icon System -->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-transcoder</artifactId>
            <version>1.17</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-codec</artifactId>
            <version>1.17</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-rasterizer</artifactId>
            <version>1.17</version>
        </dependency>
        
        
        <!-- Stonebreak Game Module for shared resources -->
        <dependency>
            <groupId>com.stonebreak</groupId>
            <artifactId>stonebreak-game</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        
        <!-- Jackson JSON library for data parsing (same as Stonebreak) -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        
        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.9</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.14</version>
        </dependency>
        
        <!-- Testing Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Mockito for mocking -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.8.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.8.0</version>
            <scope>test</scope>
        </dependency>
        
        <!-- AssertJ for fluent assertions -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.24.2</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Awaitility for asynchronous testing -->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>



    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            
            <!-- Maven Surefire Plugin for running tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                        <include>**/Test*.java</include>
                    </includes>
                    <!-- JVM args for LWJGL/ImGui testing -->
                    <argLine>
                        --enable-native-access=ALL-UNNAMED
                        --add-opens=java.base/java.nio=org.lwjgl
                        --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
                        --add-exports=java.base/sun.security.util=ALL-UNNAMED
                        -Dorg.lwjgl.util.Debug=false
                        -Dorg.lwjgl.util.NoChecks=true
                    </argLine>
                    <systemPropertyVariables>
                        <headless.test>false</headless.test>
                        <performance.test.mode>true</performance.test.mode>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.openmason.app.OpenMasonApp</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.openmason.app.OpenMasonApp</mainClass>
                    <options>
                        <!-- Enable native access for LWJGL modules (Java 21+ requirement, critical for Java 24+) -->
                        <option>--enable-native-access=ALL-UNNAMED</option>
                        
                        <!-- Java 24+ compatibility flags -->
                        <option>--add-exports=java.base/sun.nio.ch=ALL-UNNAMED</option>
                        <option>--add-exports=java.base/sun.security.util=ALL-UNNAMED</option>
                        <option>--add-opens=java.base/java.nio=org.lwjgl</option>
                        
                        <!-- Additional stability flags for native library interaction -->
                        <option>-Djava.library.path=.</option>
                        <option>-Dorg.lwjgl.util.Debug=false</option>
                        <option>-Dorg.lwjgl.util.NoChecks=true</option>
                        <option>-Dorg.lwjgl.system.SharedLibraryExtractPath=./natives</option>
                    </options>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>